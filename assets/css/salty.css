body {
	font-family: Arial, sans-serif;
	margin: 20px;
}

h1,
h2 {
	color: #333;
}

.container {
	max-width: 650px;
	margin: 0 auto;
}

.form-group {
	display: flex;
	align-items: center;
	margin-bottom: 15px;
}

.form-group label {
	flex: 2;
	margin-right: 10px;
	font-weight: bold;
}

.form-group input[type="text"],
.form-group select {
	padding: 8px;
	box-sizing: border-box;
	border: 1px solid #ccc;
}

.form-group input[type="text"] {
	border-radius: 6px 0px 0px 6px;
	flex: 4;
}

.form-group select {
	border-radius: 0 6px 6px 0;
	flex: 1;
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;
}

.form-group select#unitPlaceHolder {
	padding: 8px;
	border: 1px solid #e5e5e5;
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;
}

button {
	background-color: #28a745;
	color: white;
	padding: 10px 15px;
	border: none;
	border-radius: 4px;
	cursor: pointer;
	margin-top: 10px;
}

button:hover {
	background-color: #1e7e34;
}

.results {
	margin-top: 20px;
}

.results .form-group {
	margin-bottom: 10px;
}

.results input[type="text"] {
	background-color: #f9f9f9;
}

.row input[type="text"] {
	text-align: center;
}

.custom-datalist .datalist-options {
	display: none;
	overflow-y: auto;
	width: 4em;
	position: absolute;
	background-color: white;
	border: 1px solid #ccc;
	border-top: none;
	border-radius: 0 0 5px 5px;
	z-index: 10;
	max-height: 200px;
	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.custom-datalist .datalist-options.active {
	display: block;
}
/* 
.custom-datalist .datalist-option {
	display: none;
} */

.custom-datalist .datalist-option {
	padding: 10px;
	cursor: pointer;
	border-bottom: 1px solid #f0f0f0;
}

.custom-datalist .datalist-option:hover {
	background-color: #f0f0f0;
}

.resistor-container {
	display: flex;
	align-items: center;
	width: 100%;
	max-width: 900px;
	/* Maintain aspect ratio of the resistor body + leads */
	aspect-ratio: 6 / 1;
	height: auto;
	max-height: 150px;
}

.lead {
	flex: 1;
	height: 10%;
	background: #555;
}

.resistor-body {
	flex: 5;
	display: flex;
	height: 100%;
}

.bulge {
	flex: 0.5;
	background: #c49e58;
	border-radius: 10% / 10%;
	display: flex;
	justify-content: center;
	align-items: center;
	position: relative;
}

.neck_0 {
	flex-direction: column;
	flex: 1;
	display: flex;
}

.neck_1 {
	height: 10%;
	flex: 1;
	display: flex;
}

.neck {
	flex: 6;
	display: flex;
	background: #c49e58;
	justify-content: space-around;
	align-items: center;
}

.band {
	width: 6%;
	height: 80%;
	border-radius: 2px;
}

/* Color classes */
.Black {
	background: black;
}

.Brown {
	background: brown;
}

.Red {
	background: red;
}

.Orange {
	background: orange;
}

.Yellow {
	background: yellow;
}

.Green {
	background: green;
}

.Blue {
	background: blue;
}

.Violet {
	background: violet;
}

.Gray {
	background: gray;
}

.White {
	background: white;
}

.Gold {
	background: gold;
}

.Silver {
	background: silver;
}

.controls {
	display: flex;
	gap: 0.5rem;
	justify-content: center;
	flex-wrap: wrap;
}

.controls > * > select {
	font-size: small;
}

div.resistor-group {
	color: black;
}

#resistor_num {
	font-size: 1.2rem;
	font-weight: bolder;
}

#resistor_ppm {
	position: relative;
	top: 1vh;
}

/* Small screens: improve tap targets and layout */
@media screen and (max-width: 736px) {
	h1 { font-size: 1.6em; }

	.controls label.band_select {
		flex: 1 1 calc(50% - 0.5rem);
		min-width: 160px;
	}

	.controls > * > select {
		font-size: 0.95rem;
	}

	.resistor-container {
		max-height: 140px;
	}

	.band {
		width: 7.5%;
	}

	#resistor_num, #resistor_ppm, #resistor_tol {
		text-align: center;
	}
}

/* Code calculators: input and output wrapping */
.code-inputs {
	display: flex;
	gap: 0.5rem;
	align-items: center;
}

.code-output {
	display: flex;
	align-items: center;
	margin-bottom: 1rem; /* add breathing room from bottom edge of box */
}

/* Balance left/right spacing for centered rows within .inner (override main.css negative margins) */
.inner .row.aln-center {
	margin-left: 0; /* neutralize -1.5em from main.css for centered rows */
}
.inner .row.aln-center > * {
	padding: 0 1.5em; /* symmetric gutters instead of left-only */
}

/* Ensure extra bottom padding for calculator containers */
#main > .inner .box.align-center {
	padding-bottom: 2.5em; /* add more breathing room at the bottom */
}

.custom-datalist {
	position: relative;
}

/* Input group: result + unit as a single control */
.input-group {
	display: inline-flex;
	align-items: stretch;
	width: 100%;
}

/* Wider screens: keep tolerance inline and cap width */
@media screen and (min-width: 737px) {
	.code-output {
		gap: 0.5rem; /* spacing between result and tolerance */
	}
	.code-output .input-group {
		width: auto;        /* allow sharing space with tolerance */
		flex: 1 1 auto;     /* grow/shrink as needed */
	}
	.code-output .tolerance-wrap {
		flex: 0 1 50%;      /* behave like a normal textfield area, max half width */
		max-width: 50%;
		margin-left: 0;     /* rely on container gap for spacing */
	}
	.code-output .tolerance-wrap input[type="text"] {
		width: 100%;        /* fill wrapper width */
	}
}
.input-group input[type="text"] {
	/* Make result input take ~75% */
	flex: 3 1 75%;
	min-width: 0; /* allow shrinking within flex container */
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}
.input-group select {
	/* Make units take ~25% */
	flex: 1 1 25%;
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
	white-space: nowrap;
}
.tolerance-wrap { margin-left: 0.5rem; }

@media screen and (max-width: 736px) {
	.code-inputs {
		flex-wrap: nowrap; /* avoid stacking in multiple columns */
		flex-direction: column; /* 1 per row vertically on small */
		align-items: stretch;
	}
	.code-inputs .custom-datalist {
		width: 100%;
	}
	.code-output {
		width: 100%;
		flex-direction: column;
		align-items: stretch;
		gap: 0.5rem;
	}
	.code-output .input-group {
		width: 100%;
	}
	.code-output .input-group input[type="text"] {
		/* keep 75/25 split; no fixed width on small screens */
		width: auto;
	}
	.code-output .tolerance-wrap {
		width: 100%;
		margin-left: 0; /* remove horizontal offset on small screens */
	}
	.code-output .tolerance-wrap input[type="text"] {
		width: 100%; /* fill wrapper for clean edges */
	}
}
